<style>
    @@import url('https://fonts.googleapis.com/css?family=Roboto');
    *{
        font-family: 'Roboto', sans-serif;
    }

    h1 {
        line-height: initial;
    }

    .bg-main {
        background: url('~/images/main-bg.jpg');
        background-image: url('../../images/main-bg.jpg');
        background-size: 100%;
        background-position-y: -100px;
    }

    /* Conteudo principal da Página */
    .container{
        width: 98%;
        height: 97%;
        position: absolute;
        top: 1%;
        left: 1%;
    }

    .container section{
        width: 50%;
        position: relative;
        float: left;
    }

    section.login{
        margin-top: 100px;
        height: 300px;
        text-align: center;
    }

    .login-wrapper label{
        width: 100%;
        position: relative;
        float: left;
        margin: 3px 0;
    }

    .button-wrapper{
        width: 100%;
    }

    /* Classe Custom dos Botões */
    .button-wrapper button{
        width: 48%;
        position: relative;
        float: left;
        height: 40px;
        margin-top: 8px;
        font-size: 15px;
        background-color: white;
        cursor: pointer;
        transition: 0.3s;
    }

    .button-wrapper button:first-child{
        margin-right: 4%;
    }

    hr.line{
        border: 2px solid white;
    }

    /* Classe da fonte gigante do texto de Chamada */
    h1.hero{
        font-size: 55px;
        color:white;
    }

    .about-wrapper{
        padding: 20px;
    }

    /* Usado para trocar Diplay do Animal */
    span[data-change]{
        color:white;
        background-color: #FF715B;
        padding: 0 10px;
    }
</style>
<body class="bg-main">

   <div class="container">
       <div class="row">
           <div class="col-md-8">
               <div class="about-wrapper">
                   <h1 class="hero">A maior rede de adoção de Pet's do Brasil</h1>
                   <hr class="line">
                   <h1 class="hero">
                       O lugar perfeito para encontrar seu novo
                       <br>
                       <span data-change id="displayAnimal">
                           Cachorro
                       </span>
                   </h1>
               </div>
           </div>
           <div class="col-md-4">
               <div class="login-wrapper">
                   <h1 style=" text-align:left">Acesse nossa Rede!</h1>
                   <form>
                       <label>
                           <input placeholder="Email" type="email" class="form-control" required>
                       </label>
                       <label>
                           <input placeholder="Senha" type="password" class="form-control" required>
                       </label>
                       <div class="button-wrapper">
                           <button class="btn btn-primary">Criar Conta</button>
                           <button class="btn btn-default">Fazer Login</button>
                       </div>
                   </form>
               </div>
           </div>
       </div>
   </div>

</body>


<script>

    //Lista de Animais para aparecer no Display
    let listaAnimais = ["Cachorro", "Gato", "Cavalo", "Morcego", "Camaleão", "Hipopótamo", "Leão Marinho", "Ornitorrinco"];

    //Indicar qual o Animal atual do Display
    let indexAtual = 0;

    //Elemento DOM do Display
    let DisplayAnimal = document.getElementById('displayAnimal');

    //Função que é chamada para Trocar o Display
    async function TrocarAnimal(){

    //Aumenta-se o index para pegar o proximo animal
    indexAtual++;

    //Se chgar no final da lista volta para o começo
    if(indexAtual == listaAnimais.length)
        indexAtual = +[];

    //Pega novo Animal
    let novoAnimal = listaAnimais[indexAtual];
    let countAtual = DisplayAnimal.innerHTML.length;

    //Faz apagar cada letra do animal atual a cada 50ms
    for(let i = 0; i < countAtual; i++){
        await sleep(50);
        DisplayAnimal.innerHTML = DisplayAnimal.innerHTML.substr(0, DisplayAnimal.innerHTML.length - 1);
    }

    //Espera 200ms
    await sleep(200);

    //Comeca escrever o novo animal com cada letra a cada 50ms
    for(let i = 0; i < novoAnimal.length; i++){
        let charAtual = novoAnimal[i];
        await sleep(50);
        DisplayAnimal.innerHTML += charAtual;
        }
    }

    //Função utilitária para fazer código esperar
    function sleep(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }

    //Configura chamada de Função de trocar animal a cada 5.2s
    setInterval(TrocarAnimal, 5200);

</script>